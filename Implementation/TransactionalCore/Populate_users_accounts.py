import psycopg2
from faker import Faker
import random

# Connection settings
conn = psycopg2.connect(
    dbname='KineDataBase',
    user='postgres',
    password='1234567',
    host='localhost',
    port='5432'
)
cursor = conn.cursor()
faker = Faker('es_CO')

# Function to insert user and their account
def insert_user_and_account():
    full_name = faker.name()
    ID_document = faker.unique.random_number(digits=10)
    phone = faker.unique.msisdn()[:10]
    email = faker.unique.email()
    country = faker.country()
    status = 'active'

    # Insert user (let PostgreSQL generate the UUID)
    cursor.execute("""
        INSERT INTO "user" (full_name, ID_document, phone, email, country_of_residence, status)
        VALUES (%s, %s, %s, %s, %s, %s)
        RETURNING user_id
    """, (full_name, ID_document, phone, email, country, status))

    user_id = cursor.fetchone()[0]

    # Create linked account (again, UUID generated by PostgreSQL)
    type_account = random.choice(['low_amount', 'savings'])
    balance = round(random.uniform(0, 5_000_000), 2)
    monthly_limit = round(random.uniform(1_000_000, 10_000_000), 2)
    account_status = 'active'

    cursor.execute("""
        INSERT INTO "account" (user_id, type_account, balance, monthly_limit, status)
        VALUES (%s, %s, %s, %s, %s)
    """, (user_id, type_account, balance, monthly_limit, account_status))

# Insert multiple users
TOTAL = 10000
BATCH_SIZE = 1000

for i in range(0, TOTAL):
    insert_user_and_account()

    if (i + 1) % BATCH_SIZE == 0:
        conn.commit()
        print(f"Batch {i + 1} inserted")

# Commit and close
conn.commit()
cursor.close()
conn.close()
print("Insertion completed successfully.")